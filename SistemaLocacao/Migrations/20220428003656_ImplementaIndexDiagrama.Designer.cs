// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaLocacao.Context;

#nullable disable

namespace SistemaLocacao.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20220428003656_ImplementaIndexDiagrama")]
    partial class ImplementaIndexDiagrama
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaLocacao.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CPF", "Name")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SistemaLocacao.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<DateTime>("LeaseDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_locacao");

                    b.Property<int>("MovieId")
                        .HasColumnType("int")
                        .HasColumnName("id_filme");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_devolucao");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MovieId");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("SistemaLocacao.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<byte>("Lounch")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("lancamento");

                    b.Property<int>("ParentalRating")
                        .HasColumnType("int")
                        .HasColumnName("classificacao_indicativa");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("titulo");

                    b.HasKey("Id");

                    b.HasIndex("Lounch", "Title")
                        .IsUnique();

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("SistemaLocacao.Models.Location", b =>
                {
                    b.HasOne("SistemaLocacao.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaLocacao.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
